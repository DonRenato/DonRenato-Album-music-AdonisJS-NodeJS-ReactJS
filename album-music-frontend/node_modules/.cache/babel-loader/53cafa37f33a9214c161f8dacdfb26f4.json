{"ast":null,"code":"var _jsxFileName = \"/Users/onizuka/Album-Music_React/album-music-frontend/src/components/pages/DetailsAlbum/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport api from '../../../services/api';\nimport CreateSong from '../CreateSong'; // import { Container } from './styles';\n\nexport default function DetailsAlbum(props) {\n  const [songs, setSongs] = useState([]);\n  const [albums, setAlbums] = useState([]);\n  useEffect(() => {\n    async function AlbumDetails() {\n      const {\n        id\n      } = props.match.params;\n      const response = await api.get(`/albums/${id}`);\n      const data = response.data;\n      setAlbums(data);\n      console.log(data);\n      console.log(id);\n    }\n\n    AlbumDetails();\n  }, [props.match.params, songs]);\n\n  async function handleDeleteSong(id) {\n    try {\n      if (!window.confirm(\"Deseja mesmo excluir a musica?\")) return;\n      await api.delete(`songs/${id}`);\n      setSongs(songs.filter(song => song.id !== id));\n    } catch (err) {\n      alert('erro ao deletar. Tente novamente');\n    }\n  }\n\n  async function handleNewSong(e, id) {\n    e.preventDefault();\n    console.log(id);\n    const music = {\n      name\n    };\n\n    try {\n      if (name === '') return;\n      await api.post(`/songs/${id}/song/add`, music);\n    } catch (err) {\n      alert('erro ao cadastrar');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Detalhes do Album \", \" \", /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/albums\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Voltar\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"columns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"\",\n    className: \"image\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field is-grouped\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"file-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"file-input\",\n    name: \"image\",\n    value: name,\n    onChange: e => setSongs(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"file-cta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"file-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  }, \"Escolher imagem\")))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleNewSong,\n    className: \"button is-info-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Atualizar\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CreateSong, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }), albums.map(album => album.song.map((songs, idx) => /*#__PURE__*/React.createElement(\"p\", {\n    key: songs.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 14\n    }\n  }, idx + 1, \" - \", songs.name, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon has-text-danger\",\n    onClick: () => handleDeleteSong(songs.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-trash-alt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }))))))));\n}","map":{"version":3,"sources":["/Users/onizuka/Album-Music_React/album-music-frontend/src/components/pages/DetailsAlbum/index.js"],"names":["React","useState","useEffect","Link","api","CreateSong","DetailsAlbum","props","songs","setSongs","albums","setAlbums","AlbumDetails","id","match","params","response","get","data","console","log","handleDeleteSong","window","confirm","delete","filter","song","err","alert","handleNewSong","e","preventDefault","music","name","post","target","value","map","album","idx"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport api from '../../../services/api';\nimport CreateSong from '../CreateSong';\n\n\n\n\n\n// import { Container } from './styles';\n\nexport default function DetailsAlbum(props) {\n  const [songs, setSongs] = useState([]);\n  const [albums, setAlbums] = useState([]);\n  \n   \n\n  useEffect(() => {\n    async function AlbumDetails(){\n      const { id } = props.match.params;\n      const response = await api.get(`/albums/${id}`);\n      const data  = response.data;\n      setAlbums(data);\n      console.log( data);\n      console.log(id);\n    \n    }  \n   \n    AlbumDetails();\n  },[props.match.params, songs])\n\n  async function handleDeleteSong(id){\n    try{\n      if(!window.confirm(\"Deseja mesmo excluir a musica?\")) return;\n      await api.delete(`songs/${id}`);\n      setSongs(songs.filter(song => song.id !== id));\n      \n    }catch(err){\n      alert('erro ao deletar. Tente novamente');\n    }\n  }\n\n  async function handleNewSong(e, id){\n    e.preventDefault();\n    console.log(id);\n\n    const music = {\n      name\n    };\n    try{\n        if(name === '' ) return\n\n        await api.post(`/songs/${id}/song/add`, music) ;  \n\n    }\n    catch(err){\n        alert('erro ao cadastrar')\n    }\n  }\n  \n  return (\n\n    <div className=\"box\">\n      <h1 className=\"title\">\n        Detalhes do Album {\" \"}\n        <small>\n          <Link to=\"/albums\">\n            Voltar\n          </Link>\n        </small>\n      </h1>\n      <div className=\"columns\">\n        <div className=\"column\">\n          <img src=\"\" className=\"image\" alt=\"\" />\n          <br />\n          <div className=\"field is-grouped\">\n            <div className=\"file control\">\n              <label className=\"file-label\">\n                <input \n                type=\"file\" \n                className=\"file-input\"\n                name=\"image\"\n                value={name}\n                onChange={e => setSongs(e.target.value)}\n                />\n                <span className=\"file-cta\">\n                  <span className=\"file-icon\">\n                    <i className=\"fas fa-upload\" />\n                  </span>\n                  <div className=\"file-label\">\n                    Escolher imagem\n                  </div>\n                </span>\n              </label>\n            </div>\n            <button \n            onClick={handleNewSong}\n            className=\"button is-info-control\">\n              Atualizar\n              </button>\n          </div>\n        </div>\n        <div className=\"column\">\n          <CreateSong />\n          {albums.map(album => \n            album.song.map((songs, idx) => \n            (<p key={songs.id}>{idx + 1} - {songs.name} \n            <span className=\"icon has-text-danger\" \n            onClick={() => handleDeleteSong(songs.id)}>\n              <i className=\"fas fa-trash-alt\" />\n              </span>\n            </p>)\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}