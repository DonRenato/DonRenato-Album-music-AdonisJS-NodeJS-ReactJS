{"ast":null,"code":"var _jsxFileName = \"/Users/onizuka/Album-Music/album-music-frontend/src/components/pages/DetailsAlbum/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport api from '../../../services/api';\nimport CreateSong from '../CreateSong';\nexport default function DetailsAlbum(props) {\n  const [song, setSong] = useState([]);\n  const [albums, setAlbums] = useState([]);\n  const [songs, setSongs] = useState([]);\n  const [image, setImage] = useState({\n    preview: '',\n    raw: ''\n  });\n  const {\n    id\n  } = props.match.params;\n  useEffect(() => {\n    async function AlbumDetails() {\n      const response = await api.get(`/albums/${id}`);\n      setAlbums(response.data);\n    }\n\n    AlbumDetails();\n  }, [albums]);\n  useEffect(() => {\n    return () => {\n      if (image.preview !== \"\") if (window.confirm(\"deseja alterar a imagem\")) handleUpload();\n      setImage({\n        preview: \"\"\n      });\n    };\n  }, [image]);\n\n  async function handleDeleteSong(id) {\n    try {\n      if (!window.confirm(\"Deseja mesmo excluir a musica?\")) return;\n      await api.delete(`songs/${id}`);\n      setSongs(songs.filter(song => song.id !== id));\n    } catch (err) {\n      alert('erro ao deletar. Tente novamente');\n    }\n  }\n\n  async function handleNewSong() {\n    const {\n      id\n    } = props.match.params;\n    if (song === \"\") return;\n    const response = await api.post(`/albums/${id}/song/add`, {\n      song\n    });\n    setSong(response.data);\n    setSong(\"\");\n  }\n\n  function handleChange(e) {\n    setImage({\n      preview: URL.createObjectURL(e.target.files[0]),\n      raw: e.target.files[0]\n    });\n  }\n\n  async function handleUpload() {\n    const formData = new FormData();\n    formData.append('album_image', image.raw);\n    await api.put(`/albums/${id}/photo`, formData);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, \"Detalhes do Album \", \" \", /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/albums\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Voltar\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"columns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, albums.map(album => /*#__PURE__*/React.createElement(\"img\", {\n    key: album.id,\n    src: image.preview ? image.preview : album.image,\n    className: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field is-grouped\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"file-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"file-input\",\n    name: \"image\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"file-cta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"file-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }, \"Escolher imagem\")))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button is-info-control\",\n    onClick: handleUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"Atualizar\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CreateSong, {\n    setSong: setSong,\n    song: song,\n    handleNewSong: handleNewSong,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }), albums.map(album => album.song.map((songs, idx) => /*#__PURE__*/React.createElement(\"p\", {\n    key: songs.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 16\n    }\n  }, idx + 1, \" - \", songs.name, \" - \", album.image, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon has-text-danger\",\n    onClick: () => handleDeleteSong(songs.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-trash-alt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }\n  }))))))));\n}","map":{"version":3,"sources":["/Users/onizuka/Album-Music/album-music-frontend/src/components/pages/DetailsAlbum/index.js"],"names":["React","useState","useEffect","Link","api","CreateSong","DetailsAlbum","props","song","setSong","albums","setAlbums","songs","setSongs","image","setImage","preview","raw","id","match","params","AlbumDetails","response","get","data","window","confirm","handleUpload","handleDeleteSong","delete","filter","err","alert","handleNewSong","post","handleChange","e","URL","createObjectURL","target","files","formData","FormData","append","put","map","album","idx","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport api from '../../../services/api';\nimport CreateSong from '../CreateSong';\n\n\n\nexport default function DetailsAlbum(props) {\n  const [song, setSong] = useState([]);\n  const [albums, setAlbums] = useState([]);\n  const [songs, setSongs] = useState([]);\n  const [image, setImage] = useState({ preview: '', raw: '' });\n  const { id } = props.match.params;\n\n  \n  useEffect(() => {\n    async function AlbumDetails() {\n\n      const response = await api.get(`/albums/${id}`);\n\n      setAlbums(response.data);\n       \n      \n      \n\n    }\n\n    AlbumDetails();\n    \n  }, [albums])\n\n\n  useEffect(() =>{\n   \n    \n    return () => {\n      if(image.preview !== \"\")\n        if(window.confirm(\"deseja alterar a imagem\"))\n          handleUpload();\n          \n      \n    \n      setImage({preview: \"\"})\n          \n    }\n  },[image])\n\n  async function handleDeleteSong(id) {\n    try {\n      if (!window.confirm(\"Deseja mesmo excluir a musica?\")) return;\n      await api.delete(`songs/${id}`);\n      setSongs(songs.filter(song => song.id !== id));\n\n    } catch (err) {\n      alert('erro ao deletar. Tente novamente');\n    }\n\n  }\n\n\n  async function handleNewSong() {\n\n    const { id } = props.match.params;\n\n\n    if (song === \"\") return;\n\n\n    const response = await api.post(`/albums/${id}/song/add`, { song });\n    setSong(response.data)\n\n    setSong(\"\");\n\n  }\n\n\n  function handleChange(e) {\n    setImage({\n      preview: URL.createObjectURL(e.target.files[0]),\n      raw: e.target.files[0]\n    });\n  }\n\n  async function handleUpload() {\n    \n    const formData = new FormData();\n    formData.append('album_image', image.raw);\n\n    await api.put(`/albums/${id}/photo`, formData);\n    \n  }\n\n\n \n\n  \n\n  return (\n\n    <div className=\"box\">\n      <h1 className=\"title\">\n        Detalhes do Album {\" \"}\n        <small>\n          <Link to=\"/albums\">\n            Voltar\n          </Link>\n        </small>\n      </h1>\n      <div className=\"columns\">\n        <div className=\"column\">\n          { albums.map(album => (\n            <img key={album.id} src={ image.preview ? image.preview : album.image} className=\"image\" />\n            )) \n          }<div className=\"field is-grouped\">\n            <div className=\"file control\">\n              <label className=\"file-label\">\n                <input\n                  type=\"file\"\n                  className=\"file-input\"\n                  name=\"image\"\n                  onChange={handleChange}\n                />\n                <span className=\"file-cta\">\n                  <span className=\"file-icon\">\n                    <i className=\"fas fa-upload\" />\n                  </span>\n                  <div className=\"file-label\">\n                    Escolher imagem\n                    </div>\n                </span>\n\n\n\n              </label>\n            </div>\n            <button className=\"button is-info-control\" onClick={handleUpload} >\n              Atualizar\n              </button>\n          </div>\n        </div>\n        <div className=\"column\">\n          <CreateSong setSong={setSong} song={song} handleNewSong={handleNewSong} />\n          {albums.map(album =>\n            album.song.map((songs, idx) =>\n              (<p key={songs.id}>{idx + 1} - {songs.name} - {album.image}\n                <span className=\"icon has-text-danger\"\n                  onClick={() => handleDeleteSong(songs.id)}>\n                  <i className=\"fas fa-trash-alt\" />\n                </span>\n              </p>)\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}